# global chunk options
knitr::opts_chunk$set(echo = TRUE,
error = TRUE,
message = FALSE,
warning = FALSE,
comment = NA,
fig.width=6,
fig.height=5)
# set seed
set.seed(3212019)
library(tidyverse)
library(caret)
library(gifski)
theme_custom <- function() {
theme_bw() +
theme(text = element_text(color = "#4C6A92"),
axis.title = element_text(size = 16),
title = element_text(size = 20),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
plot.caption = element_text(size = 10))
}
# data url
wineurl <- paste("https://archive.ics.uci.edu/ml/",
"machine-learning-databases/wine/wine.data", sep = "")
# read in data and set as tibble
wine <- as_tibble(read.csv(file = wineurl, header = FALSE))
# assign variable names
colnames(wine) <- c("origin", "alcohol", "acid",
"ash", "alcalinity", "magnesium",
"phenols", "flavanoids", "nonflavanoid",
"proanthocyanins","color.int", "hue",
"od", "proline")
# change origin to factor
wine <- wine %>%
mutate(origin = factor(origin))
wine
# data url
wineurl <- paste("https://archive.ics.uci.edu/ml/",
"machine-learning-databases/wine/wine.data", sep = "")
# read in data and set as tibble
wine <- as_tibble(read.csv(file = wineurl, header = FALSE))
# assign variable names
colnames(wine) <- c("origin", "alcohol", "acid",
"ash", "alcalinity", "magnesium",
"phenols", "flavanoids", "nonflavanoid",
"proanthocyanins","color.int", "hue",
"od", "proline")
# change origin to factor
wine <- wine %>%
mutate(origin = factor(origin))
wine
theme_custom <- function() {
theme_bw() +
theme(text = element_text(color = "#4C6A92"),
axis.title = element_text(size = 16),
title = element_text(size = 20),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
plot.caption = element_text(size = 10))
}
# data url
wineurl <- paste("https://archive.ics.uci.edu/ml/",
"machine-learning-databases/wine/wine.data", sep = "")
# read in data and set as tibble
wine <- as_tibble(read.csv(file = wineurl, header = FALSE))
# assign variable names
colnames(wine) <- c("origin", "alcohol", "acid",
"ash", "alcalinity", "magnesium",
"phenols", "flavanoids", "nonflavanoid",
"proanthocyanins","color.int", "hue",
"od", "proline")
# change origin to factor
wine <- wine %>%
mutate(origin = factor(origin))
wine
# data url
wineurl <- paste("https://archive.ics.uci.edu/ml/",
"machine-learning-databases/wine/wine.data", sep = "")
# read in data and set as tibble
wine <- as_tibble(read.csv(file = wineurl, header = FALSE))
# assign variable names
colnames(wine) <- c("origin", "alcohol", "acid",
"ash", "alcalinity", "magnesium",
"phenols", "flavanoids", "nonflavanoid",
"proanthocyanins","color.int", "hue",
"od", "proline")
# change origin to factor
wine <- wine %>%
mutate(origin = factor(origin))
wine
for (i in names(wine)[-1]){
print({
wine %>%
#select(origin, i) %>%
ggplot(mapping = aes(x = origin, y = get(i))) +
geom_boxplot(fill = "#AD5D5D") +
labs(x = "origin", y = i) +
theme_custom()
})
}
library(readr)
wine <- read_csv("wine.csv")
# data url
wineurl <- paste("https://archive.ics.uci.edu/ml/",
"machine-learning-databases/wine/wine.data", sep = "")
# read in data and set as tibble
wine <- as_tibble(read.csv(file = wineurl, header = FALSE))
# assign variable names
colnames(wine) <- c("origin", "alcohol", "acid",
"ash", "alcalinity", "magnesium",
"phenols", "flavanoids", "nonflavanoid",
"proanthocyanins","color.int", "hue",
"od", "proline")
# change origin to factor
wine <- wine %>%
mutate(origin = factor(origin))
wine
# data url
wineurl <- paste("https://archive.ics.uci.edu/ml/",
"machine-learning-databases/wine/wine.data", sep = "")
# read in data and set as tibble
wine <- as_tibble(read.csv(file = 'wine.csv', header = FALSE))
# assign variable names
colnames(wine) <- c("origin", "alcohol", "acid",
"ash", "alcalinity", "magnesium",
"phenols", "flavanoids", "nonflavanoid",
"proanthocyanins","color.int", "hue",
"od", "proline")
# change origin to factor
wine <- wine %>%
mutate(origin = factor(origin))
wine
for (i in names(wine)[-1]){
print({
wine %>%
#select(origin, i) %>%
ggplot(mapping = aes(x = origin, y = get(i))) +
geom_boxplot(fill = "#AD5D5D") +
labs(x = "origin", y = i) +
theme_custom()
})
}
for (i in names(wine)[-1]){
print({
wine %>%
#select(origin, i) %>%
ggplot(mapping = aes(x = origin, y = get(i))) +
geom_boxplot(fill = "#AD5D5D") +
labs(x = "origin", y = i) +
theme_custom()
})
}
ggplot(wine, aes(x= flavanoids, y= phenols)) +
geom_point()
ggplot(wine, aes(x= flavanoids, y= phenols, shape=cyl, color=cyl)) +
geom_point()
ggplot(wine, aes(x= flavanoids, y= phenols, shape=origin, color=origin)) +
geom_point()
for (i in names(wine)[-1]){
print({
wine %>%
#select(origin, i) %>%
ggplot(mapping = aes(x = origin, y = names(wine)[i]) +
geom_boxplot(fill = "#AD5D5D") +
labs(x = "origin", y = i) +
theme_custom()
})
}
for (i in names(wine)[-1]){
print({
wine %>%
#select(origin, i) %>%
ggplot(mapping = aes(x = origin, y = names(wine)[i])) +
geom_boxplot(fill = "#AD5D5D") +
labs(x = "origin", y = i) +
theme_custom()
}
}
for (i in names(wine)[-1]){
print(
wine %>%
#select(origin, i) %>%
ggplot(mapping = aes(x = origin, y = names(wine)[i])) +
geom_boxplot(fill = "#AD5D5D") +
labs(x = "origin", y = i) +
theme_custom()
}
for (i in names(wine)[-1]){
print(
wine %>%
#select(origin, i) %>%
ggplot(mapping = aes(x = origin, y = names(wine)[i])) +
geom_boxplot(fill = "#AD5D5D") +
labs(x = "origin", y = i) +
theme_custom()
}
for (i in names(wine)[-1]){
print(
wine %>%
#select(origin, i) %>%
ggplot(mapping = aes(x = origin, y = names(wine)[i])) +
geom_boxplot(fill = "#AD5D5D") +
labs(x = "origin", y = i) +
theme_custom())
}
?get
i
get(i)
wine %>%
get(i)
length(wine)
wine[,1]
wine
# data url
wineurl <- paste("https://archive.ics.uci.edu/ml/",
"machine-learning-databases/wine/wine.data", sep = "")
# read in data and set as tibble
wine <- as_tibble(read.csv(file = 'wine.csv', header = FALSE))
# assign variable names
colnames(wine) <- c("origin", "alcohol", "acid",
"ash", "alcalinity", "magnesium",
"phenols", "flavanoids", "nonflavanoid",
"proanthocyanins","color.int", "hue",
"od", "proline")
# change origin to factor
wine <- wine %>%
mutate(origin = factor(origin))
wine
# data url
wineurl <- paste("https://archive.ics.uci.edu/ml/",
"machine-learning-databases/wine/wine.data", sep = "")
# read in data and set as tibble
wine <- as_tibble(read.csv(file = 'wine.csv', header = FALSE))
# assign variable names
# colnames(wine) <- c("origin", "alcohol", "acid",
#                        "ash", "alcalinity", "magnesium",
#                        "phenols", "flavanoids", "nonflavanoid",
#                        "proanthocyanins","color.int", "hue",
#                        "od", "proline")
# change origin to factor
wine <- wine %>%
mutate(origin = factor(origin))
wine
# data url
wineurl <- paste("https://archive.ics.uci.edu/ml/",
"machine-learning-databases/wine/wine.data", sep = "")
# read in data and set as tibble
wine <- as_tibble(read.csv(file = 'wine.csv', header = TRUE))
# assign variable names
# colnames(wine) <- c("origin", "alcohol", "acid",
#                        "ash", "alcalinity", "magnesium",
#                        "phenols", "flavanoids", "nonflavanoid",
#                        "proanthocyanins","color.int", "hue",
#                        "od", "proline")
# change origin to factor
wine <- wine %>%
mutate(origin = factor(origin))
wine
# data url
wineurl <- paste("https://archive.ics.uci.edu/ml/",
"machine-learning-databases/wine/wine.data", sep = "")
# read in data and set as tibble
wine <- as_tibble(read.csv(file = 'wine.csv', header = TRUE))
# assign variable names
# colnames(wine) <- c("origin", "alcohol", "acid",
#                        "ash", "alcalinity", "magnesium",
#                        "phenols", "flavanoids", "nonflavanoid",
#                        "proanthocyanins","color.int", "hue",
#                        "od", "proline")
# change origin to factor
wine <- wine %>%
mutate(Wine = factor(Wine))
wine
for (i in names(wine)[-1]) {
print({
wine %>%
#select(origin, i) %>%
ggplot(mapping = aes(x = origin, y = get(i)) +
geom_boxplot(fill = "#AD5D5D") +
labs(x = "origin", y = i) +
theme_custom()
})
}
for (i in names(wine)[-1]) {
print(
wine %>%
#select(origin, i) %>%
ggplot(mapping = aes(x = origin, y = get(i)) +
geom_boxplot(fill = "#AD5D5D") +
labs(x = "origin", y = i) +
theme_custom()
)
}
for (i in names(wine)[-1]) {
print(
wine %>%
#select(origin, i) %>%
ggplot(mapping = aes(x = origin, y = get(i))) +
geom_boxplot(fill = "#AD5D5D") +
labs(x = "origin", y = i) +
theme_custom()
)
}
for (i in names(wine)[-1]) {
print(
wine %>%
#select(origin, i) %>%
ggplot(mapping = aes(x = Wine, y = get(i))) +
geom_boxplot(fill = "#AD5D5D") +
labs(x = "origin", y = i) +
theme_custom()
)
}
ggplot(wine, aes(x= flavanoids, y= phenols, shape=origin, color=origin)) +
geom_point()
ggplot(wine, aes(x= flavanoids, y= phenols, shape=Wine, color=Wine)) +
geom_point()
ggplot(wine, aes(x= flavanoids, y= phenols, shape=Wine, color=Wine)) +
geom_point()
ggplot(wine, aes(x= flavanoids, y= phenols, shape=origin, color=origin)) +
geom_point()
ggplot(wine, aes(x= flavanoids, y= phenols,color=origin, shape=origin)) +
geom_point()
ggplot(wine, aes(x= flavanoids, y= phenols, color=wine, shape=wine)) +
geom_point()
ggplot(wine, aes(x= flavanoids, y= phenols, color=Wine, shape=Wine)) +
geom_point()
ggplot(wine, aes(x= Flavanoids, y= Phenols, color=Wine, shape=Wine)) +
geom_point()
origin_count <- wine %>%
group_by(Whine)
origin_count <- wine %>%
group_by(Wine)
origin_count <- wine %>%
group_by(Wine) %>%
dplyr::count(Wine)
origin_count <- wine %>%
group_by(Wine) %>%
dplyr::count(Wine)
origin_count
?is.na
na_count <- wine %>%
group_by(is.na(Wine)) %>%
dplyr::count(Wine)
na_count
sum(is.na(Wine))
sum(is.na(wine))
summary(wine)
glimpse(wine)
createDataPartition(wine$Wine, 0.75, list=FALSE)
createDataPartition(wine$Wine, 0.75, list=TRUE)
train.index <- createDataPartition(wine$Wine, 0.05, list=FALSE)
train.index
train.index <- createDataPartition(wine$Wine, 0.70, list=FALSE)
train.index
train.index <- createDataPartition(wine$Wine, p=0.70, list=FALSE)
train.index
