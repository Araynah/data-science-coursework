load("~/Documents/STT-180/Exam1/titanic3.Rdata")
load("~/Documents/STT-180/Exam1/Carseats.Rdata")
knitr::opts_chunk$set(echo = TRUE)
Oceania1 <- c("Australia", "Fiji", "Kiribati", "Marshall Islands", "Micronesia", "Nauru", "New Zealand")
Oceania2 <- c("Palau", "Papua New Guinea", "Samoa", "Solomon Islands", "Tonga", "Tuvalu","Vanuatu")
# Your code for Q1.1 below
Oceania1 <- c("Australia", "Fiji", "Kiribati", "Marshall Islands", "Micronesia", "Nauru", "New Zealand")
Oceania2 <- c("Palau", "Papua New Guinea", "Samoa", "Solomon Islands", "Tonga", "Tuvalu","Vanuatu")
# Your code for Q1.1 below
Oceania <- c(Oceania1,Oceania2)
Oceania1 <- c("Australia", "Fiji", "Kiribati", "Marshall Islands", "Micronesia", "Nauru", "New Zealand")
Oceania2 <- c("Palau", "Papua New Guinea", "Samoa", "Solomon Islands", "Tonga", "Tuvalu","Vanuatu")
# Your code for Q1.1 below
Oceania <- c(Oceania1,Oceania2)
Oceania
count.by.three <- seq(12,99,3)
# Your code for Q1.2 below
count.by.three[13:20]
# Your code for Q1.3 below
head(CO2)
CO2 %>%
mutate(uptake.per.conc = uptake / conc)
head(relig_income)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyverse")
library(tidyverse)
CO2 %>%
mutate(uptake.per.conc = uptake / conc)
CO2 %>%
mutate(uptake.per.conc = uptake / conc)
# or
CO2$uptake.per.conc <- CO2$uptake / CO2$conc
library(PASWR)
glimpse(titanic3)
head(relig_income)
head(smiths)
head(starwars)
library(PASWR)
head(titanic3)
# Your code for Q2.1 below
titanic3 %>%
group_by(plass)
# filter
flights %>%
filter(month==1, day==1)
library(nycflights13)
glimpse(flights)
# filter
flights %>%
filter(month==1, day==1)
flights %>%
select(year:dep_time)
flights %>%
pull(carrier)
flights %>%
slice(1:7)
# slice_sample
flights %>%
slice_sample(n=5)
# rename
flights %>%
rename(Departure.Time=dep_time, Departure.Delay=dep_delay)
# arrange
flights %>%
arrange(year, month, day, desc(dep_time))
# mutate
flights %>%
mutate(gain=arr_delay-dep_delay, speed=distance/air_time)
# transmute
flights %>%
transmute(gain=arr_delay-dep_delay, speed=distance/air_time)
# distinct
flights %>%
distinct(carrier, origin)
#summarize
flights %>%
summarise(avg_distance=mean(distance), num_flights=n())
#summarize
flights %>%
group_by(carrier)
library(nycflights13)
head(flights)
# Your code for Q2.1 below
titanic3 %>%
group_by(pclass)
# Your code for Q2.1 below
titanic3 %>%
group_by(pclass) %>%
summarise(mean(age))
# Your code for Q2.1 below
titanic3 %>%
group_by(pclass) %>%
summarise(mean(age),na.rm = TRUE)
# Your code for Q2.1 below
titanic3 %>%
group_by(pclass) %>%
summarise(mean_perclass = mean(age),na.rm = TRUE)
# Your code for Q2.1 below
titanic3 %>%
group_by(pclass) %>%
summarise(mean_perclass = mean(age,na.rm = TRUE))
# Your code for Q2.2 below
number_lifeBoats <- titanic3 %>%
filter(titanic3 == 1)
# Your code for Q2.2 below
number_lifeBoats <- titanic3 %>%
filter(survived == 1)
# Your code for Q2.2 below
number_lifeBoats <- titanic3 %>%
filter(survived == 1) %>%
group_by(boat)
# Your code for Q2.2 below
number_lifeBoats <- titanic3 %>%
filter(survived == 1) %>%
group_by(boat)
number_lifeBoats
# Your code for Q2.2 below
number_lifeBoats <- titanic3 %>%
filter(survived == 1) %>%
unique(boat)
# Your code for Q2.2 below
number_lifeBoats <- titanic3 %>%
filter(survived == 1) %>%
group_by(unique(boat))
# Your code for Q2.2 below
number_lifeBoats <- titanic3 %>%
group_by(baot) %>% unique(boat)
# Your code for Q2.2 below
number_lifeBoats <- titanic3 %>%
group_by(boat)
number_lifeBoats
# Modify this code for Q2.3
titanic3 %>%
group_by(sex) %>%
summarise(missing = sum(!is.na(age)), mean_age = mean(!is.na(age)), std_age = sd(!is.na(age)))
# Modify this code for Q2.3
titanic3 %>%
group_by(sex) %>%
summarise(missing = sum(!is.na(missing)), mean_age = mean(!is.na(age)), std_age = sd(!is.na(age)))
# Modify this code for Q2.3
titanic3 %>%
group_by(sex) %>%
summarise(missing = sum(is.na(age)), mean_age = mean(!is.na(age)), std_age = sd(!is.na(age)))
# Modify this code for Q2.3
titanic3 %>%
group_by(sex) %>%
summarise(missing = sum(is.na(age)), mean_age = mean(is.na(age)), std_age = sd(!is.na(age)))
# Modify this code for Q2.3
titanic3 %>%
group_by(sex) %>%
summarise(missing = sum(is.na(age)), mean_age = mean(age,na.rm=TRUE), std_age = sd(!is.na(age)))
# Modify this code for Q2.3
titanic3 %>%
group_by(sex) %>%
summarise(missing = sum(is.na(age)), mean_age = mean(age,na.rm=TRUE), std_age = sd(age,na.rm=TRUE)
# Modify this code for Q2.3
titanic3 %>%
group_by(sex) %>%
summarise(missing = sum(is.na(age)), mean_age = mean(age,na.rm=TRUE), std_age = sd(age)
# Modify this code for Q2.3
titanic3 %>%
group_by(sex) %>%
summarise(missing = sum(is.na(age)), mean_age = mean(age,na.rm=TRUE), std_age = sd(age,na.rm=TRUE))
titanic3 %>%
filter(!is.na(age) & !is.na(fare)) %>%
summarise(age = mean(age), fare = mean(fare))
titanic4 <- titanic3[!is.na(titanic3$age) & !is.na(titanic3$fare), ]
apply(titanic4[, c(5,9)], 1, mean)
titanic3 %>%
filter(pclass == "2nd") %>%
group_by(survived) %>%
summarise(count = n())
table(titanic3$survived[titanic3$pclass == "2nd"])
Carseats %>%
filter(ShelveLoc=="Medium") %>%
summarise(TotalCarseats=n(), Mean_sale = mean(Sales, na.rm=TRUE), StdDev_sale = sd(Sales, na.rm=TRUE))
CarseatsM <- subset(Carseats, Carseats$ShelveLoc=="Medium")
data.frame(TotalCarseats=length(CarseatsM$ShelveLoc), Mean_sale = mean(CarseatsM$Sales), StdDev_sale=sd(CarseatsM$Sales))
Credit %>%
group_by(Married) %>%
summarise(Count=n(), Average_rating=mean(Rating, na.rm=TRUE), StdDev_rating=sd(Rating, na.rm=TRUE))
load(ISLR2)
load('ISLR2')
load('Credit')
Credit %>%
group_by(Married) %>%
summarise(Count=n(), Average_rating=mean(Rating, na.rm=TRUE), StdDev_rating=sd(Rating, na.rm=TRUE))
install.packages("ISLR2")
library(ISLR2)
load('ISLR2')
Credit %>%
group_by(Married) %>%
summarise(Count=n(), Average_rating=mean(Rating, na.rm=TRUE), StdDev_rating=sd(Rating, na.rm=TRUE))
Credit %>%
group_by(Married) %>%
summarise(Count=n(), Average_rating=mean(Rating, na.rm=TRUE), StdDev_rating=sd(Rating, na.rm=TRUE))
CreditM <- subset(Credit, Credit$Married=="Yes")
data.frame(Married = c("No","Yes"), Count=c(length(Credit$Married), length(CreditM$Married)), Average_rating=c(mean(Credit$Rating, na.rm=TRUE), mean(CreditM$Rating, na.rm=TRUE)), StdDev_rating=c(sd(Credit$Rating, na.rm=TRUE), sd(CreditM$Rating, na.rm=TRUE)))
# Modify this starter code to create a plot matching the supplied image
ggplot(data=titanic3,mapping=aes(x=age, y=fare)) +
geom_point(mapping=aes(), #<-- Hint
colour="black", shape=21)
knitr::opts_chunk$set(echo = TRUE)
iris %>%
ggplot(mapping = aes(x = Petal.Length, y = Petal.Width, color = Species, shape = Species)) +
geom_point() + # Add a layer to add points or symbols
facet_wrap(~ Species) +
theme_bw()
# Add aesthetics in layers
iris %>%
ggplot(mapping = aes(x = Petal.Length, y = Petal.Width, color = Species, shape = Species)) +
geom_point() + # Add a layer to add points or symbols
facet_wrap(~ Species)
# Add aesthetics in layers
iris %>%
ggplot(mapping = aes(x = Petal.Length, y = Petal.Width, color = Species, shape = Species)) +
geom_point() # Add a layer to add points or symbols
# Add aesthetics in layers
iris %>%
ggplot(mapping = aes(x = Petal.Length, y = Petal.Width, color = Species)) +
geom_point() # Add a layer to add points or symbols
# Add aesthetics in layers
iris %>%
ggplot(mapping = aes(x = Petal.Length, y = Petal.Width, color = Species)) +
geom_point() # Add a layer to add points or symbols
# Add aesthetics in layers
iris %>%
ggplot(mapping = aes(x = Petal.Length, y = Petal.Width)) +
geom_point() # Add a layer to add points or symbols
knitr::opts_chunk$set(echo = TRUE)
# Pipe the object into ggplot()
diamonds_filtered %>%
# Build the base layer of the plot
ggplot(aes(x = cut, y = price)) +
# Add a layer for the boxplot
geom_boxplot()
# Check out the structure of this object
glimpse(diamonds)
# Filter diamonds using the conditions outlined above
# Bonus: Filter diamonds using base R and then the tidyverse. Right now we will use the tidyverse only
unique(diamonds$color)
diamonds_filtered <- diamonds %>%
dplyr::filter(carat >= 2, color %in% c("J", "I", "H", "G"))
# glimpse() # Checking the structure of the filtered object, looks good
# pull(color) %>%
# unique() # Use pull() and unique() to check that the filtering on color was done correctly, looks good
glimpse(diamonds_filtered)
# Pipe the object into ggplot()
diamonds_filtered %>%
# Build the base layer of the plot
ggplot(aes(x = cut, y = price)) +
# Add a layer for the boxplot
geom_boxplot()
# Pipe the object into ggplot()
diamonds_filtered %>%
# Build the base layer of the plot
ggplot(aes(x = cut, y = price, color = cut, fill = cut)) +
# The arguments to add border and fill colors by a column must go inside of the function aes()
# This code below will not work
# ggplot(aes(x = cut, y = price), color = cut, fill = cut) +
# Add a layer for the boxplot
geom_boxplot()
# Pipe the object into ggplot()
diamonds_filtered %>%
# Build the base layer of the plot
ggplot(aes(x = cut, y = price, color = cut, fill = cut)) +
# Add a layer for the boxplot
geom_boxplot() +
# Add facets or panels by color
facet_wrap(~ color)
# Pipe the object into ggplot()
diamonds_filtered %>%
# Build the base layer of the plot
ggplot(aes(x = cut, y = price, color = cut, fill = cut)) +
# Add a layer for the boxplot
geom_boxplot() +
# Add facets or panels by color
facet_wrap(~ color) +
# Clean up the background colors with built-in themes
theme_bw()
# Vectors of hand-picked colors
cols <- c("firebrick", "navy", "gold", "gray5", "black") # border colors
fills <- c("firebrick", "navy", "gold", "gray5", "white") # fill colors
# You can use hexcodes for colors (Google HTML color codes)
# cols <- c("#cd543a", "navy", "gold", "gray5", "black") # border colors
# fills <- c("#cd543a", "navy", "gold", "gray5", "white") # fill colors
cols
# Pipe the object into ggplot()
diamonds_filtered %>%
# Build the base layer of the plot
ggplot(aes(x = cut, y = price, color = cut, fill = cut)) +
# Add a layer for the boxplot
geom_boxplot() +
# Add facets or panels by color
facet_wrap(~ color) +
# Change the default ggplot colors to handpicked colors
scale_color_manual(values = cols) +
scale_fill_manual(values = fills) +
# Clean up the background colors with built-in themes
theme_bw()
# Modify this starter code to create a plot matching the supplied image
ggplot(data=titanic3,mapping=aes(x=age, y=fare)) +
geom_point(mapping=aes(color=sex), #<-- Hint
colour="black", shape=21)
# Modify this starter code to create a plot matching the supplied image
ggplot(data=titanic3,mapping=aes(x=age, y=fare,color=sex)) +
geom_point(mapping=aes(), #<-- Hint
colour="black", shape=21)
# Modify this starter code to create a plot matching the supplied image
ggplot(data=titanic3) +
geom_point(mapping=aes(), #<-- Hint
colour="black", shape=21)
# Modify this starter code to create a plot matching the supplied image
ggplot(data=titanic3) +
geom_point(mapping=aes(x=age, y=fare), #<-- Hint
colour="black", shape=21)
# Modify this starter code to create a plot matching the supplied image
ggplot(data=titanic3) +
geom_point(mapping=aes(x=age, y=fare,colour = "blue","red"), #<-- Hint
colour="black", shape=21)
# Modify this starter code to create a plot matching the supplied image
ggplot(data=titanic3) +
geom_point(mapping=aes(x=age, y=fare,colour = c("blue","red")), #<-- Hint
colour="black", shape=21)
# Modify this starter code to create a plot matching the supplied image
ggplot(data=titanic3, mapping=aes(x=age, y=fare,color = sex) +
geom_point())
# Modify this starter code to create a plot matching the supplied image
titanic3 %>%
ggplot(mapping=aes(x=age, y=fare,color = sex) +
geom_point())
# Modify this starter code to create a plot matching the supplied image
titanic3 %>%
ggplot(mapping=aes(x=age, y=fare,color = sex)) +
geom_point()
# Modify this starter code to create a plot matching the supplied image
titanic3 %>%
ggplot(mapping=aes(x=age, y=fare,color = sex,shape = pclass)) +
geom_point()
# Modify this starter code to create a plot matching the supplied image
titanic3 %>%
ggplot(mapping=aes(x=age, y=fare,color = sex,size = pclass)) +
geom_point()
# Modify this starter code to create a plot matching the supplied image
titanic3 %>%
ggplot(mapping=aes(x=age, y=fare,color = sex,pch = pclass)) +
geom_point()
# Modify this starter code to create a plot matching the supplied image
titanic3 %>%
ggplot(mapping=aes(x=age, y=fare,color = sex,size = pclass)) +
geom_point()
# Modify this starter code to create a plot matching the supplied image
iris %>%
ggplot(aes(x=Sepal.Length)) +
geom_boxplot(aes(Sepal.Length, fill=Species)) # +
# facet_grid(rows=vars()) # <-- Hint: uncomment and complete this statement
ggplot(mapping = aes(x = Petal.Length, y = Petal.Width, color = Species, shape = Species)) +
geom_point() + # Add a layer to add points or symbols
facet_wrap(~ Species)
iris %>%
ggplot(mapping = aes(x = Petal.Length, y = Petal.Width, color = Species, shape = Species)) +
geom_point() + # Add a layer to add points or symbols
facet_wrap(~ Species)
iris %>%
ggplot(mapping = aes(x=Sepal.Length, color = Species, shape = Species)) +
geom_boxplot(aes(Sepal.Length, fill=Species)) + # Add a layer to add points or symbols
facet_wrap(~ Species,)
iris %>%
ggplot(mapping = aes(x=Sepal.Length, color = Species, shape = Species)) +
geom_boxplot(aes(Sepal.Length, fill=Species)) + # Add a layer to add points or symbols
acet_grid(rows=vars())
iris %>%
ggplot(mapping = aes(x=Sepal.Length, color = Species, shape = Species)) +
geom_boxplot(aes(Sepal.Length, fill=Species)) + # Add a layer to add points or symbols
facet_grid(rows=vars())
iris %>%
ggplot(mapping = aes(x=Sepal.Length, color = Species, shape = Species)) +
geom_boxplot(aes(Sepal.Length, fill=Species)) + # Add a layer to add points or symbols
facet_wrap(~ Species,)+ facet_grid(rows=vars())
iris %>%
ggplot(mapping = aes(x=Sepal.Length, color = Species, shape = Species)) +
geom_boxplot(aes(Sepal.Length, fill=Species)) + # Add a layer to add points or symbols
facet_wrap(~ Species,)
iris %>%
ggplot(mapping = aes(x=Sepal.Length, color = Species, shape = Species)) +
geom_boxplot(aes(Sepal.Length, fill=Species)) + # Add a layer to add points or symbols
facet_wrap(~ Species .)
iris %>%
ggplot(mapping = aes(x=Sepal.Length, color = Species, shape = Species)) +
geom_boxplot(aes(Sepal.Length, fill=Species)) + # Add a layer to add points or symbols
facet_wrap(Species ~ .)
iris %>%
ggplot(mapping = aes(x=Sepal.Length, color = Species, shape = Species)) +
geom_boxplot(aes(Sepal.Length, fill=Species)) + # Add a layer to add points or symbols
facet_grid(rows=vars(Species))
iris %>%
ggplot(mapping = aes(x=Sepal.Length, color = Species)) +
geom_boxplot(aes(Sepal.Length, fill=Species)) + # Add a layer to add points or symbols
facet_grid(rows=vars(Species))
iris %>%
ggplot(mapping = aes(x=Sepal.Length, color = Species)) +
geom_boxplot(aes(Sepal.Length)) + # Add a layer to add points or symbols
facet_grid(rows=vars(Species))
iris %>%
ggplot(mapping = aes(x=Sepal.Length, color = Species,fill = Species)) +
geom_boxplot(aes(Sepal.Length)) + # Add a layer to add points or symbols
facet_grid(rows=vars(Species))
iris %>%
ggplot(mapping = aes(x=Sepal.Length, color = Species)) +
geom_boxplot(aes(Sepal.Length)) + # Add a layer to add points or symbols
facet_grid(rows=vars(Species))
#1
colnames(iris)[which(colnames(iris) == "Species")] <- "name of species"
#2
longley[,'Population']
#3
longley[1:4,]
#4
longley$GNP.by.pop <- longley$GNP / longley$Population
#5
sorted_ozone <- sort(airquality$Ozone, decreasing = TRUE)
#sorted_airquality <- airquality[order(airquality$Ozone, decreasing = TRUE), ] # reorders the data set
#6
airquality[order(airquality$Solar.R), ]
#7
col_means <- apply(airquality, 2, mean, na.rm = TRUE)
col_sds <- apply(airquality, 2, sd, na.rm = TRUE)
#8
plot(ChickWeight$Time,ChickWeight$weight, xlab = 'Time', ylab = 'Weight')
#9
chick4 <- subset(ChickWeight, Chick == 4)
plot(chick4$Time, chick4$weight, type = "l",
xlab = "Time", ylab = "Weight",
main = "Chick number 4")
#10
boxplot(ChickWeight$weight,
main = "Distribution of Chick Weights",
ylab = "Weight",
col = "lightblue",
border = "black")
#11
day21 <- subset(ChickWeight, Time == 21)
boxplot(weight ~ Diet, data = day21,
main = "Weight Distribution on Day 21 by Diet",
xlab = "Diet", ylab = "Weight",
col = c("red", "blue", "green", "purple"),
border = "black")
#12
morley_high_speed <- subset(morley, Speed > 950)
#13
morley_expt2 <- subset(morley, Expt == 2, select = -Run)
#14
morley_subset <- subset(morley, Run %in% c(1, 7, 8, 9, 14, 16, 19, 20))
#15
morley_filtered <- subset(morley, Expt == 2 & Run %in% c(1, 7, 8, 9, 14, 16, 19, 20) & Speed > 950)
# Modify this starter code to create a plot matching the supplied image
titanic3 %>%
ggplot(mapping=aes(x=age, y=fare,color = sex,size = pclass,border = 'black')) +
geom_point()
# Modify this starter code to create a plot matching the supplied image
titanic3 %>%
ggplot(mapping=aes(x=age, y=fare,color = sex,size = pclass)) +
geom_point()
# Modify this starter code to create a plot matching the supplied image
iris %>%
ggplot(aes(x=Sepal.Length)) +
geom_boxplot(aes(Sepal.Length, fill=Species )) # +
# Modify this starter code to create a plot matching the supplied image
iris %>%
ggplot(mapping = aes(x=Sepal.Length)) +
geom_boxplot(aes(Sepal.Length, fill=Species )) # +
# Modify this starter code to create a plot matching the supplied image
iris %>%
ggplot(aes(x=Sepal.Length)) +
geom_boxplot(aes(Sepal.Length, fill=Species )) # +
# Modify this starter code to create a plot matching the supplied image
# Your code for Q2.2 below
number_lifeBoats <- titanic3 %>%
group_by(boat) %>%
summarise(count = n())
number_lifeBoats
CO2 %>%
mutate(uptake.per.conc = uptake / conc)
# or
CO2$uptake.per.conc <- CO2$uptake / CO2$conc
library(tidyverse)
library(tidyverse)
library(tidyverse)
library(ISLR2)
