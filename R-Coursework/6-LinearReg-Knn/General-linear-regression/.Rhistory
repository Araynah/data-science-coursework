# global chunk options
knitr::opts_chunk$set(echo = TRUE,
error = TRUE,
message = FALSE,
warning = FALSE,
comment = NA,
fig.width=6,
fig.height=5)
evals <- read.csv("evals-mod.csv")
evals <- evals %>%
rowwise() %>%
mutate(avg_bty = mean(bty_f1lower:bty_m2upper)) %>%
ungroup()
evals <- read.csv("evals-mod.csv")
evals <- evals %>%
rowwise() %>%
mutate(avg_bty = mean(bty_f1lower:bty_m2upper)) %>%
ungroup()
library(tidyverse)
library(broom)
evals <- read.csv("evals-mod.csv")
evals <- evals %>%
rowwise() %>%
mutate(avg_bty = mean(bty_f1lower:bty_m2upper)) %>%
ungroup()
lin.model <- lm(language ~ score, data= evals )
mod.fit <- lm(language ~ score, data= evals )
mod.fit <- lm(language ~ score, data= evals )
library(MASS)
library(tidyverse)
library(broom)
mod.fit <- lm(language ~ score, data= evals )
mod.fit <- lm(score ~ language, data = evals )
mod.fit <- lm(score ~ language, data = evals )
mod.fit <- lm(score ~ language, data = evals )
mod.fit
modfit <- lm(score ~ language, data = evals )
modfit
library(MASS)
library(tidyverse)
library(broom)
evals <- read.csv("evals-mod.csv")
# global chunk options
knitr::opts_chunk$set(echo = TRUE,
error = TRUE,
message = FALSE,
warning = FALSE,
comment = NA,
fig.width=6,
fig.height=5)
evals <- read.csv("evals-mod.csv")
evals <- evals %>%
rowwise() %>%
mutate(avg_bty = mean(bty_f1lower:bty_m2upper)) %>%
ungroup()
modfit <- lm(score ~ language, data = evals )
modfit
mod.fit <- lm(score ~ language, data = evals )
mod.fit %>%
broom::tidy()
# global chunk options
knitr::opts_chunk$set(echo = TRUE,
error = TRUE,
message = FALSE,
warning = FALSE,
comment = NA,
fig.width=6,
fig.height=5)
mod.fit <- lm(Price ~ EngineSize,data = Cars93)
mod.fit %>%
broom::tidy()
ggplot(evals, aes(x= rank, y= score)) +
geom_jitter() +
labs(x = "Rank of Professor", y = "Course evaluation score")
mod.fit <- lm(score ~ rank, data = evals )
mod.fit %>%
broom::tidy()
evals$rank_new <- evals %>%
mutate(rank = factor(rank)) %>%
relevel()
evals$rank_new <- evals %>%
mutate(rank = factor(rank)) %>%
relevel(rank)
evals <- evals %>%
mutate(rank_new = relevel(factor(rank), ref = "tenured"))
mod.fit <- lm(score ~ rank_new, data = evals )
mod.fit %>%
broom::tidy()
mod.fit <- lm(score ~ c(gender,rank,avg_bty), data = evals )
mod.fit %>%
broom::tidy()
mod.fit <- lm(score ~ gender,rank,avg_bty, data = evals )
mod.fit %>%
broom::tidy()
